#!/usr/bin/bash
################################################################################
#                                setOverleafGit                                #
#                                                                              #
# This is a script written to set up git repo for overleaf projects	           #
#                                                                              #
# Change History                                                               #
# 2022 Jan 12	Sparsh Jain - Original code.								   #
#                                                                              #
################################################################################
################################################################################
################################################################################
#                                                                              #
#                                   License                                    #
#                                                                              #
################################################################################
################################################################################
################################################################################

################################################################################
# Help                                                                         #
################################################################################
Help()
{
   # Display Help
   # echo "Description of the script functions"
   echo
   echo "Usage: $ setOverleafGit [-h] <email>"
   echo "options:"
   # echo "g     Print the GPL license notification."
   echo "h     Print this Help."
   echo "email:	The email used to register the overleaf account."
   echo "Executes following commands:"
   echo "git config --local user.email <email>"
   echo "git config --local credential.username <email>"
   echo "git config --local credential.helper ''"
   echo
}

################################################################################
# Init																		   #
################################################################################
Init()
{
	# Initialize variables
	option=""
	email=$1
}

################################################################################
# Exit 																		   #
################################################################################
Exit()
{
	# exit
	exit
}

################################################################################
################################################################################
# Main program                                                                 #
################################################################################
################################################################################

################################################################################
# Initialize
################################################################################
Init $1

################################################################################
# Process the input options. Add options as needed.                            #
################################################################################
# Get the options
while getopts "heqV" option; do
   case $option in
	  h) # display Help
		 Help
		 Exit
		 ;;
	 \?) # incorrect option
		 echo "Error: Invalid option"
		 Exit
		 ;;
   esac
done

# if email not provided
if [ $# != 1 ]; then
	# display help
	Help
	# give warning
	echo "Error: email not provided"
	echo
	# exit
	Exit
fi

# actual configuration
# echo $email
git config --local user.email $email
git config --local credential.username $email
git config --local credential.helper ''